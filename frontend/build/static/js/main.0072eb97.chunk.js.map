{"version":3,"sources":["config.js","Services/token-service.js","Services/auth-api-service.js","styles.js","Components/Header.js","Components/LoginForm.js","Components/SignupForm.js","Components/LandingPage.js","Components/Dashboard/Title.js","Services/instance-api-service.js","Util.js","Components/Dashboard/InstanceChartHeader.js","Components/Dashboard/InstanceChart.js","Components/Dashboard/ListItems.js","Assets/CodeSpells.png","Components/Dashboard/Dashboard.js","Components/Dashboard/FabAddIcon.js","Components/Dashboard/InstanceIndex.js","Components/Dashboard/InstanceDetails.js","Context/socket.js","Components/InstanceCard.js","Components/UserInstances.js","Components/PublicInstances.js","Components/UserProfile.js","Components/NotFound.js","Components/Agora/index.js","Components/CustomView.js","App.js","fronteps.js","reportWebVitals.js","index.js"],"names":["process","includes","console","log","_timeoutId","TokenService","saveAuthToken","token","window","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","info","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","parseJwt","jwt","jwtDecode","readJwtToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","AuthApiService","postUser","user","fetch","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","username","authToken","postRefreshToken","catch","err","error","useStyles","makeStyles","theme","fab","position","bottom","spacing","right","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","icons","textAlign","title","flex","pagi","marginTop","container","maxHeight","headBar","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","headLeft","flexGrow","headTitle","headRight","instanceChartRoot","table","minWidth","visuallyHidden","border","clip","margin","overflow","top","codeMirror","expand","transform","duration","shortest","expandOpen","searchField","searchFieldHidden","copy","cardHead","popover","paper","instanceDetailsDescription","spinner","marginRight","iconRow","instanceDetailsTitle","instanceDetailsIcons","nameImageIcons","iconBox","instanceDetailsImage","tagField","tagLine","instanceDetailsTooltip","iconBut","titleRow","metaSpinner","metaTitle","metaID","instanceDetailsCodeMirror","instanceDetailsLocked","headerRoot","headerTitle","landingIntro","landingDisplay","loginFormPaper","flexDirection","loginFormAvatar","secondary","main","loginFormForm","loginFormSubmit","publicInstancesRoot","red","flexWrap","paddingTop","Header","props","classes","className","AppBar","Toolbar","Typography","variant","Button","onClick","history","push","defaultProps","location","LoginForm","usernameInput","React","createRef","passwordInput","useState","setError","handleLoginSuccess","path","component","Container","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","inputRef","type","role","preventDefault","current","value","handleSubmitJwtAuth","Grid","item","xs","to","SignupForm","passConfirmInput","handleSignupSuccess","signupFormPaper","signupFormAvatar","signupFormForm","signupFormSubmit","handleSubmit","justify","LandingPage","useHistory","isLoggedIn","href","Title","gutterBottom","children","InstanceApiService","getPublicInstances","page","getInstanceById","getPublicInstanceById","getInstancesByUser","sortDirection","sort","getUserById","searchPath","postNewInstance","forkInstanceById","deleteInstances","join","updateInstance","checkForInstanceOwnership","instance_id","textTrim","text","length","slice","SearchBar","setSearchIcon","InputBase","clsx","placeholder","onChange","event","setSearch","target","setCurrentPage","inputProps","IconButton","headCells","numeric","disablePadding","InstanceChartHeader","onSelectAllClick","orderBy","numSelected","onRequestSort","instances","instancesPerPage","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","Math","min","map","headCell","align","TableSortLabel","active","direction","property","InstanceChart","open","setOpen","expanded","setExpanded","selected","setSelected","anchorEl","setAnchorEl","popText","setPopText","popoverOpen","Boolean","runInstance","handleExpandClick","handleClose","handlePopoverOpen","currentTarget","handlePopoverClose","Fragment","highlight","Tooltip","aria-label","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","setRefresh","random","TableContainer","Table","size","stickyHeader","newSelecteds","instance","isAsc","toLowerCase","setSortDirection","setOrderBy","TableBody","hover","selectedIndex","indexOf","newSelected","concat","handleClickRow","locked","parse","date_created","toLocaleTimeString","arrow","placement","toLocaleDateString","date_modified","description","tags","t","Chip","stopPropagation","aria-expanded","defaultValue","InputProps","readOnly","aria-owns","undefined","aria-haspopup","onMouseEnter","onMouseLeave","navigator","clipboard","writeText","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","options","lineWrapping","mode","lineNumbers","matchBrackets","autoCloseBrackets","styleActiveLine","is_public","Pagination","count","ceil","totalInstances","PublicListItems","handleClickButton","pathname","ListItem","button","listIcon","ListItemIcon","ListItemText","primary","Divider","PrivateListItems","dashRoot","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","dashMenuButton","dashMenuButtonHidden","dashTitle","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","dashContainer","paddingBottom","dashPaper","fixedHeight","link","Dashboard","setIsLoggedIn","useEffect","edge","noWrap","Link","src","CodeSpells","alt","Drawer","List","Paper","child","fabIcon","FabAddIcon","haikunator","Haikunator","Fab","randomTitle","haikunate","tokenLength","delimiter","split","word","toUpperCase","clickNewInstance","InstanceIndex","debounceTimer","setInstances","setTotalInstances","currentPage","refresh","createInstance","total","changedInstance","onDelete","deletedInstanceID","filter","clickIcon","socket","socketio","connect","SocketTester","fresh","setFresh","removeAllListeners","instanceId","on","args","InstanceDetails","setInstance","isSaving","setIsSaving","instanceText","setInstanceText","instanceToDelete","setInstanceToDelete","instanceTag","setInstanceTag","userOwnsInstance","setUserOwnsInstance","debounceWait","useParams","isMounted","debounce","func","delay","clickForkIcon","when","message","CircularProgress","disabled","handleClickOpen","lock","onKeyUp","keyCode","tag","addTagToInstance","icon","tag_name","removeTagFromInstance","editor","data","InstanceCard","sm","md","Card","instanceCardCard","CardHeader","avatar","author","user_id","instanceCardAvatar","action","subheader","CardMedia","instanceCardCardMedia","image","CardContent","instanceCardChip","CardActions","instanceCardFooter","instanceCardExpand","instanceCardExpandOpen","instanceCardPopover","instanceCardPaper","cardGrid","UserInstances","cardImage","PublicInstances","rowsPerPage","UserProfile","setUser","match","params","userProfileHeadBar","userProfileHeadLeft","userProfileHeadTitle","userProfileHeadRight","userProfileRoot","NotFoundPage","appId","useClient","createClient","codec","useMicrophoneAndCameraTracks","createMicrophoneAndCameraTracks","VideoCall","setInCall","channelName","users","setUsers","start","setStart","client","ready","tracks","init","a","mediaType","subscribe","prevUsers","audioTrack","play","stop","User","uid","publish","Videos","style","flexShrink","videoTrack","Controls","video","audio","trackState","setTrackState","mute","setEnabled","ps","leaveChannel","leave","close","ChannelForm","setChannelName","Agora","inCall","Chess","ChessGame","game","setGame","fen","getPositionObject","onPieceDrop","sourceSquare","targetSquare","gameCopy","move","from","promotion","CustomView","view_id","instanceData","setInstanceData","require","outerPaper","root","App","exact","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0072eb97.chunk.js","sourcesContent":["if(process.env.REACT_APP_API_ENDPOINT.includes('8000')){\n  console.log('ENDPOINT: Local host');\n} else {\n  console.log('ENDPOINT: Heroku');\n}\n\nexport default {\n  API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT,\n  TOKEN_KEY: process.env.REACT_APP_TOKEN_KEY,\n}","import jwtDecode from 'jwt-decode'\nimport config from '../config'\n\nlet _timeoutId\nconst _TEN_SECONDS_IN_MS = 10000\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    console.info('clearing the auth token')\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`)\n  },\n  parseJwt(jwt) {\n    return jwtDecode(jwt)\n  },\n  readJwtToken() {\n    return TokenService.parseJwt(TokenService.getAuthToken())\n  },\n  _getMsUntilExpiry(payload) {\n    /*\n      payload is from the JWT\n      the `exp` value is in seconds, need to convert to ms, so * 1000\n      calculates the difference between now and when the JWT will expire\n    */\n    return (payload.exp * 1000) - Date.now()\n  },\n  queueCallbackBeforeExpiry(callback) {\n    /* get the number of ms from now until the token expires */\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\n      TokenService.readJwtToken()\n    )\n    /*\n      queue a callback that will happen 10 seconds before the token expires\n      the callback is passed in as an argument so could be anything,\n        in this app, the callback is for calling the refresh endpoint\n    */\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\n  },\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId)\n  },\n}\n\nexport default TokenService\n","import config from '../config'\nimport TokenService from './token-service'\n// import IdleService from './idle-service'\n\nconst AuthApiService = {\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/signup`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postLogin({ username, password }) {\n\n    return fetch(`${config.API_ENDPOINT}/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then(res => {\n        /*\n          whenever a logint is performed:\n          1. save the token in local storage\n          2. queue auto logout when the user goes idle\n          3. queue a call to the refresh endpoint based on the JWT's exp value\n        */\n        TokenService.saveAuthToken(res.authToken)\n        // IdleService.registerIdleTimerResets()\n        TokenService.queueCallbackBeforeExpiry(() => {\n          AuthApiService.postRefreshToken()\n        })\n        return res\n      })\n  },\n\n  postRefreshToken() {\n    return fetch(`${config.API_ENDPOINT}/auth/refresh`, {\n      method: 'POST',\n      headers: {\n        'authorization': `Bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then(res => {\n        /*\n          similar logic to whenever a user logs in, the only differences are:\n          - we don't need to queue the idle timers again as the user is already logged in.\n          - we'll catch the error here as this refresh is happening behind the scenes\n        */\n        TokenService.saveAuthToken(res.authToken)\n        TokenService.queueCallbackBeforeExpiry(() => {\n          AuthApiService.postRefreshToken()\n        })\n        return res\n      })\n      .catch(err => {\n        // console.log('refresh token request error')\n        console.error(err)\n      })\n  },\n}\n\nexport default AuthApiService\n","import { makeStyles, fade } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n\n  // Dashboard //\n  // dashRoot: {\n  //   display: 'flex',\n  // },\n  // toolbar: {\n  //   paddingRight: 24, // keep right padding when drawer closed\n  // },\n  // toolbarIcon: {\n  //   display: 'flex',\n  //   alignItems: 'center',\n  //   justifyContent: 'flex-end',\n  //   padding: '0 8px',\n  //   ...theme.mixins.toolbar,\n  // },\n  // appBar: {\n  //   zIndex: theme.zIndex.drawer + 1,\n  //   transition: theme.transitions.create(['width', 'margin'], {\n  //     easing: theme.transitions.easing.sharp,\n  //     duration: theme.transitions.duration.leavingScreen,\n  //   }),\n  // },\n  // appBarShift: {\n  //   marginLeft: drawerWidth,\n  //   width: `calc(100% - ${drawerWidth}px)`,\n  //   transition: theme.transitions.create(['width', 'margin'], {\n  //     easing: theme.transitions.easing.sharp,\n  //     duration: theme.transitions.duration.enteringScreen,\n  //   }),\n  // },\n  // dashMenuButton: {\n  //   marginRight: 36,\n  // },\n  // dashMenuButtonHidden: {\n  //   display: 'none',\n  // },\n  // dashTitle: {\n  //   flexGrow: 1,\n  // },\n  // drawerPaper: {\n  //   position: 'relative',\n  //   whiteSpace: 'nowrap',\n  //   width: drawerWidth,\n  //   transition: theme.transitions.create('width', {\n  //     easing: theme.transitions.easing.sharp,\n  //     duration: theme.transitions.duration.enteringScreen,\n  //   }),\n  // },\n  // drawerPaperClose: {\n  //   overflowX: 'hidden',\n  //   transition: theme.transitions.create('width', {\n  //     easing: theme.transitions.easing.sharp,\n  //     duration: theme.transitions.duration.leavingScreen,\n  //   }),\n  //   width: theme.spacing(7),\n  //   [theme.breakpoints.up('sm')]: {\n  //     width: theme.spacing(9),\n  //   },\n  // },\n  // appBarSpacer: {\n  // display: 'flex',\n  // alignItems: 'center',\n  // justifyContent: 'flex-end',\n  // padding: theme.spacing(0, 1),\n  // ...theme.mixins.toolbar,},\n  // content: {\n  //   flexGrow: 1,\n  //   height: '100vh',\n  //   overflow: 'auto',\n  // },\n  // dashContainer: {\n  //   paddingTop: theme.spacing(4),\n  //   paddingBottom: theme.spacing(4),\n  // },\n  // dashPaper: {\n  //   padding: theme.spacing(2),\n  //   display: 'flex',\n  //   overflow: 'auto',\n  //   flexDirection: 'column',\n  // },\n  // fixedHeight: {\n  //   height: 240,\n  // },\n  // link: {\n  //   width: '10%',\n  // },\n\n  //FabAddIcon //\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n\n  // ListItems //\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n\n  // InstanceChart //\n  icons: {\n    width: '32px',\n    textAlign: 'center',\n  },\n  title: {\n    display: 'flex',\n    flex: '1 1 100%',\n  },\n  pagi: {\n    marginTop: '8px',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  container: {\n    maxHeight: '70vh',\n  },\n  headBar: {\n    justifyContent: 'space-between',\n    fontSize: '1.5rem',\n    display: 'inline-flex',\n    width: 'auto',\n    fontFamily: \"Roboto\",\n    fontWeight: '400',\n    lineHeight: '1.334',\n    letterSpacing: '0em',\n    color: '#3f51b5',\n  },\n  headLeft: {\n    flexGrow: '5',\n    display: 'inline-flex',\n  },\n  headTitle: {\n    flexGrow: '3',\n    display: 'inline-flex',\n  },\n  headRight: {\n    flexGrow: '1',\n    width: '120px',\n    display: 'inline-flex',\n    justifyContent: 'flex-end',\n  },\n  instanceChartRoot: {\n    width: '100%',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  codeMirror: {\n    height: '60vh', \n    width: '29vw',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  searchField: {\n    width: '114px',\n  },\n  searchFieldHidden: {\n    width: '0px',\n  },\n  copy: {\n    justifyContent: 'center',\n    width: '14ch',\n  },\n  cardHead: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  popover: {\n    pointerEvents: 'none',\n    justifyContent: 'center',\n    width: '100%',\n    padding: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n\n  // InstanceDetails //\n  instanceDetailsDescription: {\n    margin: theme.spacing(1),\n    width: '100%',\n    justifyContent: 'left'\n  },\n  spinner: {\n    display: 'flex',\n    '& > * + *': {\n      marginRight: theme.spacing(2),\n    },\n  },\n  iconRow: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  instanceDetailsTitle: {\n    margin: theme.spacing(1),\n    width: '33%',\n    justifyContent: 'left'\n  },\n  instanceDetailsIcons: {\n    width: '33%',\n    display: 'flex',\n    justifyContent: \"end\",\n  },\n  nameImageIcons: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    width: '33%'\n  },\n  iconBox: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '33%',\n    height: '20%'\n  },\n  instanceDetailsImage: {\n    display: 'flex',\n    justifyContent: 'center',  \n  },\n  tagField: {\n    width: '33%',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  tagLine: {\n    margin: '8px'\n  },\n  instanceDetailsTooltip: {\n    display: 'flex'\n  },\n  iconBut: {\n    display: 'flex',\n    margin: theme.spacing(1),\n    justifyContent: 'left'\n  },\n  titleRow: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  metaSpinner: {\n    width: '33%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  metaTitle: {\n    width: '33%',\n  },\n  metaID: {\n    width: '33%',\n    textAlign: 'left'\n  },\n  instanceDetailsCodeMirror: {\n    height: '500px',\n  },\n  instanceDetailsLocked: {\n    pointerEvents: 'none',\n  },\n\n  // Header //\n  headerRoot: {\n    flexGrow: 1,\n  },\n  headerTitle: {\n    flexGrow: 1,\n  },\n  \n  // LandingPage //\n  landingIntro: {\n    width: '700px',\n    textAlign: 'center',\n    margin: 'auto',\n  },\n  landingDisplay: {\n    width: '100%',\n    textAlign: 'center',\n  },\n\n  // LoginForm //\n  loginFormPaper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  loginFormAvatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  loginFormForm: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  loginFormSubmit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n\n  // PublicInstances //\n  publicInstancesRoot: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n      display: 'flex',\n    justifyContent: 'center',\n    },\n  },\n  headBar: {\n    justifyContent: 'space-between',\n    fontSize: '1.5rem',\n    display: 'inline-flex',\n    width: 'auto',\n    fontFamily: \"Roboto\",\n    fontWeight: '400',\n    lineHeight: '1.334',\n    letterSpacing: '0em',\n    color: '#3f51b5',\n  },\n  headLeft: {\n    flexGrow: '5',\n    display: 'inline-flex',\n  },\n  headTitle: {\n    flexGrow: '3',\n    display: 'inline-flex',\n  },\n  headRight: {\n    flexGrow: '1',\n    width: '120px',\n    display: 'inline-flex',\n    justifyContent: 'flex-end',\n  },  \n\n  // SignupForm //\n  signupFormPaper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  signupFormAvatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  signupFormForm: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  signupFormSubmit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n\n  // InstanceCard //\n  instanceCardExpand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  instanceCardExpandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  instanceCardAvatar: {\n    backgroundColor: red[500],\n  },\n  instanceCardChip: {\n    flexDirection:'row',\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  instanceCardCard: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instanceCardCardMedia: {\n    paddingTop: '56.25%', // 16:9\n    color: \"blue\",\n  },\n  codeMirror: {\n    height: '60vh',\n    width: '29vw',\n  },\n  copy: {\n    justifyContent: 'center',\n    width: '14ch',\n  },\n  cardHead: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  instanceCardFooter: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  instanceCardPopover: {\n    pointerEvents: 'none',\n  },\n  instanceCardPaper: {\n    padding: theme.spacing(1),\n  },\n\n  // UserProfile //\n  userProfileRoot: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n      display: 'flex',\n    justifyContent: 'center',\n    },\n  },\n  userProfileHeadBar: {\n    justifyContent: 'space-between',\n    fontSize: '1.5rem',\n    display: 'inline-flex',\n    width: 'auto',\n    fontFamily: \"Roboto\",\n    fontWeight: '400',\n    lineHeight: '1.334',\n    letterSpacing: '0em',\n    color: '#3f51b5',\n  },\n  userProfileHeadLeft: {\n    flexGrow: '5',\n    display: 'inline-flex',\n  },\n  userProfileHeadTitle: {\n    flexGrow: '3',\n    display: 'inline-flex',\n  },\n  userProfileHeadRight: {\n    flexGrow: '1',\n    width: '120px',\n    display: 'inline-flex',\n    justifyContent: 'flex-end',\n  },\n\n  // List Items\n  listIcon: {\n    backgroundColor: 'rgb(100,149,237)',\n  }\n}));\n\nexport default useStyles","import Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../styles.js';\n\nconst Header = (props) => {\n  const classes = useStyles();\n\n  const handleLoginClick = () => {\n    const { history } = props\n    history.push('/login')\n  }\n  const handleSignupClick = () => {\n    const { history } = props\n    history.push('/signup')\n  }\n\n  return (\n    <div className={classes.headerRoot}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.headerTitle}>\n          </Typography>\n          <Button color=\"inherit\" onClick={() => handleSignupClick()}>Create Account</Button>\n          <Button color=\"inherit\" onClick={() => handleLoginClick()}>Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nHeader.defaultProps = {\n  location: {},\n  history: {\n    push: () => {},\n  },\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport { Link, Route } from \"react-router-dom\";\nimport AuthApiService from '../Services/auth-api-service';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Header from './Header';\nimport useStyles from '../styles.js';\n\nconst LoginForm = (props) => {\n  const classes = useStyles();\n  let usernameInput = React.createRef()\n  let passwordInput = React.createRef()\n  const [error, setError] = useState(null);\n\n  const handleSubmitJwtAuth = (e) => {\n    e.preventDefault()\n\n    AuthApiService.postLogin({\n      username: usernameInput.current.value,\n      password: passwordInput.current.value,\n    })\n      .then(user => {\n        usernameInput.current.value = ''\n        passwordInput.current.value = ''\n        // props.onLoginSuccess()\n        handleLoginSuccess()\n      })\n      .catch(res => {\n        setError(res.error);\n      })\n    }\n\n    const handleLoginSuccess = () => {\n      const { history } = props\n      history.push('/instances')\n    }\n\n    return (\n    <>\n      <Route\n        path={'/'}\n        component={Header}\n      />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.loginFormPaper}>\n          <Avatar className={classes.loginFormAvatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.loginFormForm} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              inputRef={usernameInput}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              inputRef={passwordInput}\n            />\n            <div role='alert'>\n              {error ? <p className='red'>{error}</p> : null}\n            </div>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.loginFormSubmit}\n              onClick={(e) => handleSubmitJwtAuth(e)}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                {/* <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link> */}\n              </Grid>\n              <Grid item>\n                <Link to={'/signup'} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </>\n  )\n};\n\nLoginForm.defaultProps = {\n  location: {},\n  history: {\n    push: () => {},\n  },\n}\n\nexport default LoginForm;","import React, { useEffect, useState } from 'react';\nimport { Link, Route } from \"react-router-dom\";\nimport AuthApiService from '../Services/auth-api-service';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Header from './Header';\nimport useStyles from '../styles.js';\n\nconst SignupForm = (props) => {\n  const classes = useStyles();\n  let usernameInput = React.createRef()\n  let passwordInput = React.createRef()\n  let passConfirmInput = React.createRef()\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if(passwordInput.current.value !== passConfirmInput.current.value){\n      setError(\"Password do not match\");\n      return;\n    }\n\n    AuthApiService.postUser({\n      username: usernameInput.current.value,\n      password: passwordInput.current.value,\n    })\n      .then(user => {\n        usernameInput.current.value = ''\n        passwordInput.current.value = ''\n        passConfirmInput.current.value = ''\n        handleSignupSuccess()\n      })\n      .catch(res => {\n        setError(res.error);\n      })\n  }\n  \n    const handleSignupSuccess = () => {\n      const { history } = props\n      history.push('/login')\n    }\n\n    return (\n    <>\n      <Route\n        path={'/'}\n        component={Header}\n      />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.signupFormPaper}>\n          <Avatar className={classes.signupFormAvatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.signupFormForm} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  inputRef={usernameInput}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  inputRef={passwordInput}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confirm-password\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"confirm-password\"\n                  autoComplete=\"current-password\"\n                  inputRef={passConfirmInput}\n                />\n              </Grid>\n            </Grid>\n            <div role='alert'>\n              {error ? <p className='red'>{error}</p> : null}\n            </div>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.signupFormSubmit}\n              onClick={(e) => handleSubmit(e)}\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link to={'/login'} variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        {/* <Box mt={5}>\n          <Copyright />\n        </Box> */}\n      </Container>\n    </>\n  )\n}\n\nSignupForm.defaultProps = {\n  location: {},\n  history: {\n    push: () => {},\n  },\n}\n\nexport default SignupForm;","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport Header from './Header';\nimport Button from '@material-ui/core/Button';\nimport useStyles from '../styles.js';\n\nconst LandingPage = (props) => {\n  let history = useHistory();\n  const classes = useStyles();\n\n  // If user has an auth token, send them to dashboard\n  if (props.isLoggedIn){\n    history.push('/instances')\n  }\n\n  return (\n    <>\n      <Route\n        path={'/'}\n        component={Header}\n      />\n      <div className={classes.landingDisplay}>\n        <div>\n          <h1>\n            CodeSpells Spells Sharing\n          </h1>\n        </div>\n        <div className={classes.landingIntro}>\n          <p>\n            Welcome to the CodeSpells Spell Sharing Server!\n          </p>\n          \n          <p>\n            Witches and wizards can use this Spells Sharing Server to save, organize, and share their favorite spells.\n            Spells made public on this server can be executed on our <a href='https://www.twitch.tv/codespells'>live Twitch dev stream </a> \n              by typing <code>!!run &lt;spell-id&gt;</code>  into chat after spawning a mini with <code>!!mini</code>.\n          </p>\n\n          <p>\n            To find a current list of functions that can be executed in the CodeSpells Twitch chat, \n              check out the documentation <a href='https://docs.racket-lang.org/codespells-live/index.html'>here</a>.\n          </p>\n\n          <p>\n            The Spell Sharing Server is still under development. Bugs can be reported in the Github \n              repository <a href='https://github.com/srfoster/codespells-spell-sharing-front-end'>here</a>. \n           </p>\n          <Link to='/signup' >\n            <Button variant=\"contained\" color=\"primary\">\n              Create Account\n            </Button>\n            {/* <button>Create Account</button> */}\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LandingPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import config from '../config'\nimport TokenService from './token-service'\n// import IdleService from './idle-service'\n\nconst InstanceApiService = {\n  getPublicInstances(page, search){\n    return fetch(`${config.API_ENDPOINT}/gallery?page=${page}&search=${search}`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getInstanceById(id){\n    return fetch(`${config.API_ENDPOINT}/instances/${id}`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getPublicInstanceById(id){\n    return fetch(`${config.API_ENDPOINT}/public-instance/${id}`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getInstancesByUser(history, page, search, sortDirection, sort){\n    return fetch(`${config.API_ENDPOINT}/instances?page=${page}&search=${search}&sort=${sort}&sortDirection=${sortDirection}`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n    .then(res =>\n      (!res.ok)\n        ? res.json().then(e => {\n          // TODO: Check error message and act accordingly\n          // This is used if user logs out, then immediately hits back to return to /instances\n          // Error message needs to be looked at.\n          if (history) history.push('/gallery')\n          // return Promise.reject(e)\n        })\n        : res.json()\n    )\n  },\n  getUserById(id, page, search){\n    page = page || 1\n    let searchPath = search ? `&search=${search}` : \"\"\n    return fetch(`${config.API_ENDPOINT}/mages/${id}?page=${page}${searchPath}`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postNewInstance(title){\n    return fetch(`${config.API_ENDPOINT}/instances?title=${title}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  forkInstanceById(id){\n    return fetch(`${config.API_ENDPOINT}/instances/${id}/fork`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  deleteInstances(id){\n    id = typeof(id) === 'number' ? id : id.join(',')\n    return fetch(`${config.API_ENDPOINT}/instances/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      // body: JSON.stringify(payload)\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  updateInstance(payload, id){\n    return fetch(`${config.API_ENDPOINT}/instances/${id}`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(payload)\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  checkForInstanceOwnership(instance_id){\n    return fetch(`${config.API_ENDPOINT}/check-ownership/${instance_id}`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n}\n\nexport default InstanceApiService\n","import Pagination from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport useStyles from './styles.js';\nimport React, { useEffect } from 'react';\n\n\nexport function textTrim(text, length){\n  if (!text) return '';\n\n  if(text.length > length){\n    return text.slice(0, length) + '...';\n  } else {\n    return text;\n  }\n}\n\nexport function SearchBar(props) {\n  const classes = useStyles();\n\n  const [searchIcon, setSearchIcon] = React.useState(true)\n\n  const handleSearchIconClick = () => {\n    setSearchIcon(!searchIcon);\n  };\n  \n  function onSearchIconChange(event) {\n    props.setSearch(event.target.value)\n    props.setCurrentPage(1)\n  }\n\n  return (\n    <>       \n      <InputBase\n        className={clsx(classes.searchField, searchIcon && classes.searchFieldHidden)}\n        placeholder=\"Search Instances\"\n        onChange={onSearchIconChange}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n      <IconButton \n        onClick={(event) => handleSearchIconClick()}\n      >\n        <SearchIcon />\n      </IconButton>\n    </>\n  )\n}\n","import React, { useEffect } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport PropTypes from 'prop-types';\n\nconst headCells = [\n  { id: 'Created', numeric: false, disablePadding: true, label: 'Created' },\n  { id: 'Modified', numeric: false, disablePadding: true, label: 'Modified' },\n  { id: 'Name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'Description', numeric: false, disablePadding: false, label: 'Description' },\n  { id: 'Tags', numeric: false, disablePadding: false, label: 'Tags' },\n  { id: 'Code', numeric: false, disablePadding: true, label: 'Code' },\n  { id: 'Edit', numeric: false, disablePadding: true, label: 'Edit'},\n  { id: 'Public', numeric: false, disablePadding: true, label: 'Public'},\n];\n\nexport function InstanceChartHeader(props) {\n  const { classes, onSelectAllClick, sortDirection, orderBy, numSelected, onRequestSort, instances, instancesPerPage } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < instancesPerPage}\n            checked={instances.length > 0 && numSelected === Math.min(instances.length, instancesPerPage)}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n          \n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? sortDirection : false}\n          >\n            {headCell.id !== 'Tags' && headCell.id !== 'Code' && headCell.id !== 'Edit' ?\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? sortDirection : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {sortDirection === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n            : headCell.id}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nInstanceChartHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n};","import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InstanceApiService from '../../Services/instance-api-service';\nimport {textTrim, SearchBar} from '../../Util.js'\nimport Pagination from '@material-ui/lab/Pagination';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport CodeIcon from '@material-ui/icons/Code';\nimport {UnControlled as CodeMirror} from 'react-codemirror2';\nimport LockIcon from '@material-ui/icons/Lock';\nimport TextField from '@material-ui/core/TextField';\nimport Popover from '@material-ui/core/Popover';\nimport useStyles from '../../styles.js';\nimport { InstanceChartHeader } from './InstanceChartHeader.js';\nimport 'codemirror/addon/edit/matchbrackets.js'\nimport 'codemirror/addon/edit/closebrackets.js'\nimport 'codemirror/addon/selection/active-line.js'\n\nexport default function InstanceChart(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [open, setOpen] = React.useState(false);\n  const [instancesPerPage, setInstancesPerPage] = React.useState(10);\n  const [expanded, setExpanded] = React.useState(false);\n  const [selected, setSelected] = React.useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [popText, setPopText] = React.useState('Click To Copy')\n  \n  const isInstanceSelected = (id) => selected.indexOf(id) !== -1;\n  const popoverOpen = Boolean(anchorEl);\n\n  const runInstance = (id) => {\n    return \"!!run \" + id\n  }\n\n  const handleExpandClick = (id) => {\n    setExpanded(id);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    // setInstanceToDelete(id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    // setInstanceToDelete(undefined);\n  };\n\n  const handleSelectAllClick = (event, id) => {\n    if (event.target.checked) {\n      const newSelecteds = props.instances\n        .map((instance) => {\n          return instance.id\n        })\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClickRow = (event, instance) => {\n    const name = instance.id\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = props.orderBy.toLowerCase() === property.toLowerCase() && props.sortDirection === 'asc';\n    props.setSortDirection(isAsc ? 'desc' : 'asc');\n    props.setOrderBy(property.toLowerCase());\n  };\n\n  const updateInstance = (instance) => {\n    let payload = instance\n\n    InstanceApiService.updateInstance(payload, instance.id)\n      .then((instance) => {\n        props.onChange(instance)\n      })\n  }\n\n  function deleteAllSelected() {\n    InstanceApiService.deleteInstances(selected)\n      .then(res => {\n        // Re-request current page of instances\n        props.setRefresh(Math.random())\n        setSelected([])\n      })\n  }\n  \n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n    setPopText('Click To Copy')\n  }\n\n  return (\n    props.instances ?\n    <React.Fragment>\n      <div className={classes.headBar}>\n        <div className={classes.headLeft}></div>\n        <div className={classes.headTitle}>My Instances</div>\n        <div className={classes.headRight}><SearchBar setSearch={props.setSearch} /></div>\n      </div>\n      <Toolbar\n        className={clsx(classes.instanceChartRoot, {\n          [classes.highlight]: selected.length > 0,\n        })}\n      >\n        {selected.length > 0 ? (\n          <>\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\" onClick={handleClickOpen}> \n              <DeleteForeverIcon \n                // onClick={deleteAllSelected}\n              />\n            </IconButton>\n          </Tooltip>\n            <Dialog \n              open={open}\n              // open={instanceToDelete === instance.id}\n              onClose={() => handleClose()}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Delete instance?\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  Are you sure you would like to delete this instance?\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => {handleClose(); deleteAllSelected()}} color=\"secondary\">\n                  Delete\n                </Button>\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\n                  Keep\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </>\n        ) : (\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          </Typography>\n        )}\n        {selected.length > 0 ? (\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n            {selected.length} selected\n          </Typography>\n        ) : (\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          </Typography>\n        )}\n      </Toolbar>\n      <TableContainer className={classes.container}>\n        <Table size='small' padding='none' stickyHeader aria-label=\"sticky table\"> \n          <InstanceChartHeader\n            classes={classes}\n            numSelected={selected.length}\n            sortDirection={props.sortDirection}\n            orderBy={props.orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            instances={props.instances}\n            instancesPerPage={instancesPerPage}\n          />\n          <TableBody>\n            {props.instances.map((instance) => (\n              <TableRow \n                hover \n                key={\"Key: \" + instance.id}\n                onClick={(event) => handleClickRow(event, instance)}\n                selected={selected.indexOf(instance.id) !== -1}\n              >\n                <TableCell padding=\"checkbox\">\n                  {instance.locked ?\n                  ''\n                  :\n                  <Checkbox\n                    checked={isInstanceSelected(instance.id)}\n                  />\n                  }\n                </TableCell>\n                <Tooltip title={new Date(Date.parse(instance.date_created)).toLocaleTimeString()} arrow placement=\"bottom-start\">\n                  <TableCell>{new Date(Date.parse(instance.date_created)).toLocaleDateString()}</TableCell>\n                </Tooltip>\n                <Tooltip title={new Date(Date.parse(instance.date_modified)).toLocaleTimeString()} arrow placement=\"bottom-start\">\n                  <TableCell>{new Date(Date.parse(instance.date_modified)).toLocaleDateString()}</TableCell>\n                </Tooltip>\n                <TableCell>{textTrim(instance.name, 15)}</TableCell>\n                <TableCell>{textTrim(instance.description, 30)}</TableCell>\n                <TableCell width='40%'>{instance.tags.length ? \n                  instance.tags.map(t => (\n                    <Chip\n                      key={t.id}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={t.name}\n                      onClick={(event) => {\n                        event.stopPropagation();\n                      }}\n                    />\n                  )) : ''}\n                </TableCell>\n                <TableCell className={classes.icons}>\n                  <IconButton\n                    className={clsx(classes.expand, {\n                      [classes.expandOpen]: expanded == instance.id,\n                    })}\n                    onClick={(event) => {\n                      handleExpandClick(instance.id)\n                      event.stopPropagation();\n                    }}\n                    aria-expanded={expanded == instance.id}\n                    aria-label=\"show more\"\n                  >\n                    <Tooltip title=\"View Code\" placement=\"top\">\n                      <CodeIcon />\n                    </Tooltip>\n                  </IconButton>\n                  <Dialog\n                    open={expanded == instance.id}\n                    onClose={(event) => {\n                      handleExpandClick(false)\n                    }}\n                    onClick={(event) => {\n                      event.stopPropagation();\n                    }}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                  >\n                    <div className={classes.cardHead}>\n                      <DialogTitle id=\"alert-dialog-title\">{`${instance.name}`}</DialogTitle>\n                    </div>\n                    <div className={classes.cardHead}>\n                      <TextField\n                        size=\"small\"\n                        className={classes.copy}\n                        id=\"read-only-twitch-command\"\n                        label=\"Twitch Dictum\"\n                        defaultValue= {runInstance(instance.id)}\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        variant=\"outlined\"\n                        aria-owns={popoverOpen ? 'mouse-over-popover' : undefined}\n                        aria-haspopup=\"true\"\n                        onMouseEnter={handlePopoverOpen}\n                        onMouseLeave={handlePopoverClose}\n                        onClick={() => {\n                          navigator.clipboard.writeText(runInstance(instance.id))\n                          setPopText('Copied!')\n                        }}\n                      />\n                      <Popover\n                        id=\"mouse-over-popover\"\n                        className={classes.popover}\n                        classes={{\n                          paper: classes.paper,\n                        }}\n                        open={popoverOpen}\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                          vertical: 'bottom',\n                          horizontal: 'left',\n                        }}\n                        transformOrigin={{\n                          vertical: 'top',\n                          horizontal: 'left',\n                        }}\n                        onClose={handlePopoverClose}\n                        disableRestoreFocus\n                      >\n                        <Typography>{popText}</Typography>\n                      </Popover>\n                    </div>\n                    <DialogContent className=\"dialogBox\">\n                      <DialogContentText id=\"CodeMirror-Display\">\n                        <CodeMirror\n                          className={classes.codeMirror}\n                          value={instance.text}\n                          options={{\n                            lineWrapping: true,\n                            mode: 'scheme',\n                            theme: 'material',\n                            lineNumbers: true,\n                            matchBrackets: true,\n                            autoCloseBrackets: true,\n                            styleActiveLine: true,\n                          }}\n                        />\n                      </DialogContentText>\n                      Edited code will not be saved\n                    </DialogContent>\n                  </Dialog>\n                </TableCell>\n                <>\n                {instance.locked ? \n                  <>\n                    <TableCell className={classes.icons}></TableCell>\n                    <TableCell className={classes.icons}>\n                      <LockIcon />\n                    </TableCell>\n                  </>\n                  :\n                  <>\n                  <TableCell className={classes.icons}>\n                    <IconButton aria-label=\"edit\" onClick={() => history.push(`/instances/${instance.id}`)}>\n                      <EditIcon />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell className={classes.icons}>\n                    <IconButton \n                    id={instance.id} \n                    aria-label=\"isPublic\" \n                    onClick={(event) => {\n                      updateInstance({...instance, is_public: !instance.is_public});\n                      event.stopPropagation();\n                    }}>\n                      {instance.is_public ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                    </IconButton>\n                  </TableCell>\n                  </>\n                }\n                </>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* {console.log(props.instances)} */}\n        <div className={classes.pagi}>\n          <Pagination count={Math.ceil(props.totalInstances / instancesPerPage)}\n            onChange={(event, page) => {\n              props.setCurrentPage(page)\n              setSelected([])\n            }}\n          />\n        </div>\n    </React.Fragment>\n    : ''\n  );\n}","import React from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PeopleIcon from '@material-ui/icons/People';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Divider from '@material-ui/core/Divider';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport PhotoAlbumIcon from '@material-ui/icons/PhotoAlbum';\nimport TokenService from '../../Services/token-service';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ListIcon from '@material-ui/icons/List';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport useStyles from '../../styles.js';\nimport {TwitchIcon} from '../../Assets/TwitchIcon.png';\n\nexport function PublicListItems(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const handleClickButton = (path) => {\n    if(path === '/login') TokenService.clearAuthToken();\n    history.push(path)\n  }  \n\n  let path = window.location.pathname\n\n  return (\n  <>\n    <div>\n\n    <ListItem button onClick={() => handleClickButton('/instances/5/views/video-call')} \n      className={path === '/video-call' ? classes.listIcon : ''}>\n      <ListItemIcon>\n        <CodeIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Instance VideoChat\" />\n    </ListItem>\n\n    <ListItem button onClick={() => handleClickButton('/instances')} \n      className={path === '/instances' ? classes.listIcon : ''}>\n      <ListItemIcon>\n        <ViewListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"My Instances\" />\n    </ListItem>\n\n    <ListItem button onClick={() => handleClickButton('/friends')}\n      className={path === '/friends' ? classes.listIcon : ''}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Friends\" />\n    </ListItem>\n\n    <ListItem button onClick={() => handleClickButton('/gallery')}\n      className={path === '/gallery' ? classes.listIcon : ''}>\n      <ListItemIcon>\n        <PhotoAlbumIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Public Instances\" />\n    </ListItem>\n    </div>\n    <Divider />\n    <div>\n    <ListItem button onClick={() => handleClickButton('/mages/me')}\n      className={path.includes('/mages') ? classes.listIcon : ''}>\n      <ListItemIcon>\n        <AccountCircleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"My Profile\" />\n    </ListItem>\n    {/* Twitch Tab */}\n    {/* <ListItem button\n      onClick={() => handleClickButton('/wizards/me')}\n      >\n      <ListItemIcon >\n      <img src='https://i.imgur.com/O6pTizo.png' alt=\"TwitchIcon\" width=\"24px\"></img>\n      </ListItemIcon>\n      <ListItemText primary=\"Twitch\" />\n    </ListItem> */}\n    <ListItem button onClick={() => handleClickButton('/login')}>\n      <ListItemIcon>\n        <PowerSettingsNewIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Logout\" />\n    </ListItem>\n    </div>\n  </>\n  )\n};\n\nexport function PrivateListItems() {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const handleClickButton = (path) => {\n    history.push(path)\n    if(path === '/login') TokenService.clearAuthToken();\n  }\n\n  let path = window.location.pathname\n\n  return (\n  <>\n    <div>\n    <ListItem button onClick={() => handleClickButton('/gallery')}\n      className={path === '/gallery' ? classes.listIcon : ''}>\n      <ListItemIcon>\n      <PhotoAlbumIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Public Instances\" />\n    </ListItem>\n    </div>\n\n    <Divider />\n    <div>\n    <ListItem button onClick={() => history.push('/login')}>\n      <ListItemIcon>\n      <PersonIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Login\" />\n    </ListItem>\n    <ListItem button onClick={() => history.push('/signup')}>\n      <ListItemIcon>\n      <PersonAddIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Signup\" />\n    </ListItem>\n    </div>\n  </>\n  )\n}","export default __webpack_public_path__ + \"static/media/CodeSpells.963573e2.png\";","import React, { useEffect, useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport {PublicListItems, PrivateListItems} from './ListItems';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport clsx from 'clsx';\nimport CodeSpells from '../../Assets/CodeSpells.png';\nimport Link from '@material-ui/core/Link';\nimport InstanceApiService from '../../Services/instance-api-service';\n// import useStyles from '../../styles.js';\nimport { makeStyles} from '@material-ui/core/styles';\n\nfunction Dashboard(props) {\n  const classes = useStyles();\n  const [isLoggedIn, setIsLoggedIn] = useState(undefined);\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.dashPaper, classes.fixedHeight);\n\n  useEffect(() => {\n    // Only running this to check if logged in\n    InstanceApiService.getUserById('me')\n      .then((user) => setIsLoggedIn(true))\n      .catch(() => setIsLoggedIn(false))\n  }, [])\n\n  return (\n    isLoggedIn === undefined ?\n    '': \n    <div className={classes.dashRoot}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.dashMenuButton, open && classes.dashMenuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.dashTitle}>\n            {/* Admin */}\n          </Typography>\n          <Link href='https://codespells.org/index.html' className={classes.link}>\n            <img src={CodeSpells} alt=\"CodeSpells\" width=\"100%\"></img>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {isLoggedIn ? <PublicListItems/> : <PrivateListItems/>}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.dashContainer}>\n          <Grid container spacing={3}>\n            {/* Instance List */}\n            <Grid item xs={12}>\n              <Paper className={classes.dashPaper}>\n                {props.child}\n              </Paper>\n            </Grid>\n          </Grid>\n          {/* Inserts relevant fab icon by page */}\n          {isLoggedIn ? props.fabIcon : ''}\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  dashRoot: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  dashMenuButton: {\n    marginRight: 36,\n  },\n  dashMenuButtonHidden: {\n    display: 'none',\n  },\n  dashTitle: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,},\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  dashContainer: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  dashPaper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  link: {\n    width: '10%',\n  }\n}));\n\nexport default Dashboard;\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InstanceApiService from '../../Services/instance-api-service';\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from '../../styles.js';\nimport Haikunator from 'haikunator';\n\nfunction FabAddIcon(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  var haikunator = new Haikunator()\n\n\n  const clickNewInstance = () => {\n    let randomTitle = haikunator.haikunate({tokenLength: 0, delimiter: \" \"})\n      .split(' ').map(word => word[0].toUpperCase() + word.slice(1)).join(' ')\n\n    console.log(randomTitle);\n    \n    InstanceApiService.postNewInstance(randomTitle)\n    .then((instance) => {\n      history.push(`/instances/${instance.id}`)\n    })\n  }\n\n  return (\n    <Tooltip title=\"New Instance\" placement=\"top\">\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={() => clickNewInstance()}>\n        <AddIcon />\n      </Fab>\n    </Tooltip>\n  );\n}\n\nexport default FabAddIcon;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport InstanceChart from './InstanceChart';\nimport Dashboard from './Dashboard';\nimport InstanceApiService from '../../Services/instance-api-service';\nimport FabAddIcon from './FabAddIcon';\n\nfunction InstanceIndex(props) {\n  const [instances, setInstances] = useState([])\n  const [totalInstances, setTotalInstances] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [refresh, setRefresh] = useState(0);\n  const [search, setSearch] = React.useState('');\n  const [sortDirection, setSortDirection] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('');\n  let history = useHistory();\n  \n  useEffect(() => {\n    InstanceApiService.getUserById('me')\n      .then((user) => props.setIsLoggedIn(true))\n      .catch(() => props.setIsLoggedIn(false))\n\n    if(props.isLoggedIn){\n      InstanceApiService.getInstancesByUser(history, currentPage, search, sortDirection, orderBy)\n        .then(instances => {\n          setInstances(instances.instances)\n          setTotalInstances(instances.total)\n        })\n    }\n  }, [currentPage, refresh, search, sortDirection, orderBy, props, history])\n\n  function createInstance(event) {\n    InstanceApiService.postNewInstance()\n      .then(instances => {\n        setInstances([...instances, instances])\n      })\n  }\n\n  return (\n    <Dashboard\n      instances={instances}\n      setInstances={setInstances}\n      createInstance={createInstance}\n      child={<InstanceChart\n        setCurrentPage={setCurrentPage}\n        setSearch={setSearch}\n        setSortDirection={setSortDirection}\n        sortDirection={sortDirection}\n        orderBy={orderBy}\n        setOrderBy={setOrderBy}\n        instances={instances}\n        totalInstances={totalInstances}\n        onChange={(changedInstance) => setInstances(instances.map(instance => changedInstance.id === instance.id ? changedInstance : instance))}\n        onDelete={(deletedInstanceID) => setInstances(instances.filter(instance => instance.id !== deletedInstanceID))}\n        setRefresh={setRefresh}\n      />}\n      fabIcon={<FabAddIcon\n        instances={instances}\n        setInstances={setInstances}\n        clickIcon={createInstance}\n      />}\n    >\n    </Dashboard>\n  )\n}\n\nexport default InstanceIndex;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams, Prompt } from \"react-router-dom\";\nimport TokenService from '../../Services/token-service';\nimport config from '../../config';\nimport Title from './Title';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InstanceApiService from '../../Services/instance-api-service';\nimport Chip from '@material-ui/core/Chip';\nimport LockIcon from '@material-ui/icons/Lock';\nimport useStyles from '../../styles.js';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CodeMirror from 'codemirror';\nimport {UnControlled as ReactCodeMirror} from 'react-codemirror2';\nimport 'codemirror/addon/edit/matchbrackets.js'\nimport 'codemirror/addon/edit/closebrackets.js'\nimport 'codemirror/addon/selection/active-line.js'\nimport CallSplitIcon from '@material-ui/icons/CallSplit';\nimport {socket} from '../../Context/socket';\n\nfunction SocketTester(props) {\n  const [fresh, setFresh] = useState(true);\n\n  useEffect(()=>{\n    console.log(\"SUBSCRIBING\")\n    socket.removeAllListeners(\"UPDATE instance/\" + props.instanceId);\n    socket.on(\"UPDATE instance/\" + props.instanceId, (args)=>{\n      console.log(args);\n      setFresh(false);\n    });\n  },[])\n\n  return(\n      <p>Instance {props.instanceId} is up-to-date: {fresh ? \"fresh\" : \"stale\"}</p>\n  )\n}\n\nlet debounceTimer\n\nexport default function InstanceDetails(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [instance, setInstance] = useState();\n  const [isSaving, setIsSaving] = useState(false);\n  // FIXME: CodeMirror re-render workaround. Needs revision\n  const [instanceText, setInstanceText] = useState(undefined)\n  const [open, setOpen] = React.useState(false);\n  const [instanceToDelete, setInstanceToDelete] = React.useState(undefined);\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState('');\n  const [instanceTag, setInstanceTag] = useState(\"\");\n  const [userOwnsInstance, setUserOwnsInstance] = useState()\n  const [error, setError] = useState(null);\n\n  let debounceWait = 2000;\n  let spinnerShow = 1000;\n  \n  const handleClickOpen = (id) => {\n    setInstanceToDelete(id);\n  };\n\n  const handleClose = (id) => {\n    setInstanceToDelete(undefined);\n  };\n\n  const { id } = useParams();\n  const path = window.location.pathname;\n  \n  useEffect(() => {\n    let isMounted = true\n\n    InstanceApiService.checkForInstanceOwnership(id)\n      .then(res => {\n        setUserOwnsInstance(res.userOwnsInstance)\n      })\n    \n    InstanceApiService.getInstanceById(id)\n      .then(instance => {\n        if (isMounted) {\n          setInstance(instance)\n          setInstanceText(instance.text);\n        }\n      })\n      .catch(res => {\n        setError(res.error);\n      })\n\n    return () => {\n      isMounted = false\n    }\n\n  }, [path, id])\n\n  const debounce = (func, delay) => {\n    // setIsSaving(true);\n    clearTimeout(debounceTimer)\n    debounceTimer = setTimeout(() => func(), delay)\n  }\n\n  const tagWhitelist = [\n  { title: 'Fire'},\n  { title: 'Ice'},\n  { title: 'Water'},\n  { title: 'Deception'},\n  { title: 'Plant'},\n  { title: \"Rock\"},\n  { title: 'Pet'},\n  { title: 'Parasite'},\n  { title: 'Electric'},\n  { title: 'Attack'},\n  { title: 'Heal'}\n  ]\n\n  const updateInstance = (instance) => {\n    setIsSaving(true);\n\n    let payload = instance\n\n    return fetch(`${config.API_ENDPOINT}/instances/${id}`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(payload)\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((instance) => {\n        setTimeout(() => {  setIsSaving(false); }, spinnerShow);\n        // setIsSaving(false)\n        setInstance(instance)\n      })\n  }\n\n  function deleteInstances(id){\n\n    return fetch(`${config.API_ENDPOINT}/instances/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  }\n\n  function addTagToInstance(id,tag){\n\n    return fetch(`${config.API_ENDPOINT}/instances/${id}/tags/${tag}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      // body: JSON.stringify(payload)\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((tag) => {\n        setIsSaving(false)\n        setInstance({...instance, tags:[...instance.tags, tag]})\n      })\n  }\n\n  //Press enter to save tag\n  function handleKeyUp(event) {\n    if(event.keyCode === 13 && instanceTag) {\n        addTagToInstance(instance.id, instanceTag)\n        setInstanceTag(\"\")\n    }\n  }\n\n  function removeTagFromInstance(id,tag_name){\n    return fetch(`${config.API_ENDPOINT}/instances/${id}/tags/${tag_name}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((tag) => {\n        setIsSaving(false)\n        setInstance({...instance, tags: instance.tags.filter(t => {\n          return t.name !== tag_name\n        })})\n      })\n  }\n\n  const clickForkIcon = (id) => {\n    // console.log(\"Before API \", id);\n    InstanceApiService.forkInstanceById(id)\n    .then((instance) => {\n      history.push(`/instances/${instance.id}`)\n      // console.log(\"After history \", instance.id);\n      // console.log(object);\n    })\n  }\n\n  return (\n    <>\n    <Prompt \n      when={isSaving}\n      message='Instance is not saved yet'\n    />\n      {instance ?\n      <div className={instance.locked ? classes.instanceDetailsLocked : ''}>\n    \t<SocketTester instanceId={instance.id}/>\n        <div className={classes.titleRow}>\n          <div className={classes.metaID}>ID: {instance.id}</div>\n          <div className={classes.metaTitle}>\n            <Title>\n              {instance.name}\n            </Title>\n          </div>\n          <div className={classes.metaSpinner}>\n            {instance.locked || !userOwnsInstance ?\n              '' :\n              isSaving ? \n                <div className={classes.spinner}>\n                  <CircularProgress size={30} />\n                </div> : \n                <div className={classes.spinner}><CheckIcon />\n                </div>\n            }\n          </div>\n        </div>\n        <p></p>\n        <div className={classes.iconRow}>\n          {instance.locked || !userOwnsInstance ? \n            <TextField className={classes.instanceDetailsTitle}\n              label=\"Name\"\n              defaultValue={instance.name}\n              disabled\n            /> :\n            <TextField className={classes.instanceDetailsTitle}\n              label=\"Name\"\n              defaultValue={instance.name}\n              onChange={(event) => {\n                setInstance({...instance, name: event.target.value})\n                setTimeout(() => {\n                  debounce(() => updateInstance({...instance, name: event.target.value}), debounceWait)\n                },500)\n              }}\n            />\n          }\n          <div className={classes.instanceDetailsImage}>\n            <img src='https://i.imgur.com/VE9Aksf.jpg' alt=\"Instance Image\" width='40%'></img>\n          </div>\n          <div className={classes.iconBox}>\n          {instance.locked || !userOwnsInstance ?\n            <div className={classes.instanceDetailsIcons}>\n              <Tooltip title=\"Instance Locked\" placement=\"top\">\n                <IconButton>    \n                  <LockIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Fork Instance\" placement=\"top-end\">\n                <IconButton onClick={() => clickForkIcon(instance.id)}>\n                  <CallSplitIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n            :\n            <div className={classes.instanceDetailsIcons}>\n              <Tooltip title=\"Fork Instance\" placement=\"top\">\n                <IconButton onClick={() => clickForkIcon(instance.id)}>\n                  <CallSplitIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Public status\" placement=\"top-end\">\n                <IconButton  aria-label=\"isPublic\" onClick={() => {\n                  setInstance({...instance, is_public: !instance.is_public})\n                  debounce(() => updateInstance({...instance, is_public: !instance.is_public}), debounceWait)\n                }}>\n                  {instance.is_public ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Delete\" placement=\"top-end\">\n                <IconButton  aria-label=\"delete\"\n                  onClick={() => handleClickOpen(instance.id)}\n                >\n                  <DeleteForeverIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          }\n          </div>\n        </div>\n         {/* Delete Instance dialog confirmation */}\n        <Dialog\n          open={instanceToDelete === instance.id}\n          onClose={() => handleClose(instance.id)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Delete instance?\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you would like to delete this instance?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => {handleClose(); deleteInstances(instance.id); history.push('/instances')}} color=\"secondary\">\n              Delete\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Keep\n            </Button>\n          </DialogActions>\n          </Dialog>\n          <div className={classes.iconRow}>\n          {instance.locked || !userOwnsInstance ? \n            <TextField className={classes.instanceDetailsDescription}\n              label=\"Description\"\n              defaultValue={instance.description}\n              disabled\n            />:\n            <TextField className={classes.instanceDetailsDescription}\n              label=\"Description\"\n              defaultValue={instance.description}\n              onChange={(event) => {\n                setInstance({...instance, description: event.target.value})\n                setTimeout(() => {\n                  debounce(() => updateInstance({...instance, description: event.target.value}), debounceWait)\n                },500)\n              }}\n            />\n          }\n        </div>\n        <p></p>\n        <div className={classes.iconRow}>\n          {instance.lock || !userOwnsInstance ?\n            <TextField className={classes.tagLine}\n              placeholder=\"Tag\"\n              value = {instanceTag}\n              label=\"Instance Tags\"\n              disabled\n            /> :\n            <TextField className={classes.tagLine}\n              placeholder=\"Tag\"\n              onKeyUp={handleKeyUp}\n              value = {instanceTag}\n              label=\"Instance Tags\"\n              onChange={(event) => {\n                setInstanceTag(event.target.value)\n              }}\n            />\n          }\n        </div>\n        {instance.locked || !userOwnsInstance ? \n          <div className={classes.icon}>\n            {instance.tags.map(t => (\n              <Chip\n              key={t.id}\n              variant=\"outlined\"\n              size=\"small\"\n              label={t.name}\n              />\n            ))}\n          </div>\n          :\n          <div className={classes.icon}>\n            {instance.tags.map(t => (\n              <Chip\n              key={t.id}\n              variant=\"outlined\"\n              size=\"small\"\n              label={t.name}\n              onDelete={() => removeTagFromInstance(instance.id, t.name)}\n              />\n            ))}\n          </div>\n        }\n        <p></p> \n        <div className={classes.instanceDetailsCodeMirror}>\n          {instance.locked || !userOwnsInstance ?\n            <ReactCodeMirror\n              className={classes.instanceDetailsCodeMirror}\n              value={instanceText ? instanceText : ''}\n              options={{\n                lineWrapping: true,\n                mode: 'scheme',\n                theme: 'material',\n                lineNumbers: true,\n                matchBrackets: true,\n                autoCloseBrackets: true,\n                styleActiveLine: true,\n              }}\n            /> :\n            <ReactCodeMirror\n              className={classes.instanceDetailsCodeMirror}\n              value={instanceText ? instanceText : ''}\n              options={{\n                lineWrapping: true,\n                mode: 'scheme',\n                theme: 'material',\n                lineNumbers: true,\n                matchBrackets: true,\n                autoCloseBrackets: true,\n                styleActiveLine: true,\n              }}\n              onChange={(editor, data, value) => {\n                setInstance({...instance, text: value})\n                // setIsSaving(true)\n                setTimeout(() => {\n                  debounce(() => updateInstance({...instance, text: value}), debounceWait\n                )}, 500)\n              }}\n            />\n          }\n        </div>\n      </div>\n      :\n      <div role='alert'>\n        {error ? <p className='red'>{error}</p> : null}\n      </div>}\n    </>\n  );\n}\n","import socketio from \"socket.io-client\";\n\nexport const socket = socketio.connect(\"ws://3.223.225.244:3001\");\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport InstanceApiService from '../Services/instance-api-service';\nimport CallSplitIcon from '@material-ui/icons/CallSplit';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {UnControlled as CodeMirror} from 'react-codemirror2';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Chip from '@material-ui/core/Chip';\nimport {textTrim} from '../Util.js'\nimport TextField from '@material-ui/core/TextField';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Popover from '@material-ui/core/Popover';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport useStyles from '../styles.js';\nimport 'codemirror/addon/edit/matchbrackets.js'\nimport 'codemirror/addon/edit/closebrackets.js'\nimport 'codemirror/addon/selection/active-line.js'\nimport Button from '@material-ui/core/Button';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n\nconst InstanceCard = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [expanded, setExpanded] = React.useState(false);\n  const runInstance= \"!!run \" + props.instance.id\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const popoverOpen = Boolean(anchorEl);\n  const [popText, setPopText] = React.useState('Click To Copy')\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const clickForkIcon = (id) => {\n    InstanceApiService.forkInstanceById(id)\n    .then((instance) => {\n      history.push(`/instances/${instance.id}`)\n    })\n  }\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n    setPopText('Click To Copy')\n  }\n\n  return (\n    <Grid className={'Card Frame'} item key={'Frame ' + props.instance.id} xs={12} sm={6} md={4}>\n      <Card className={classes.instanceCardCard}>\n      <CardHeader\n        avatar={\n          <Tooltip title={`${props.instance.author}`} placement='top'>\n            <Button onClick={() => history.push(`/mages/${props.instance.user_id}`)}>\n              <Avatar aria-label=\"recipe\" className={classes.instanceCardAvatar}>\n                {props.instance.author.slice(0,1).toUpperCase()}\n              </Avatar>\n            </Button>\n          </Tooltip>\n        }\n        action={\n          <Tooltip title='View Details' placement='top'>\n            <IconButton aria-label=\"settings\" onClick={() => history.push(`/instances/${props.instance.id}`)}>\n              <ArrowForwardIosIcon />\n            </IconButton>\n          </Tooltip>\n        }\n        title={textTrim(props.instance.name, 19)}\n        subheader={new Date(Date.parse(props.instance.date_modified)).toLocaleDateString()}\n      />\n        <CardMedia\n          className={classes.instanceCardCardMedia}\n          // image={props.cardImage}\n          // image=\"https://i.imgur.com/33XGUsG.jpg\"\n          image=\"https://i.imgur.com/KEPVIOS.jpg\"\n          title={\"Image title\" + props.instance.id}\n        />\n        <CardContent >\n          <Typography>\n            {textTrim(props.instance.description, 30)}\n          </Typography>\n        </CardContent>\n        <div className={classes.instanceCardChip}>\n        {props.instance.tags.map(t => (\n          <Chip\n          key={'tags ' + t.id}\n          variant=\"outlined\"\n          size=\"small\"\n          label={t.name}\n          // onClick={(event) => {\n          // }}\n          />\n        ))}\n        </div>\n        <CardActions className={classes.instanceCardFooter}>\n          <Tooltip title=\"Fork Instance\" placement=\"top\">\n            <IconButton onClick={() => clickForkIcon(props.instance.id)}>\n              <CallSplitIcon />\n            </IconButton>\n          </Tooltip>\n          {props.instance.locked ? <LockIcon /> : \"\"}\n          ID: {props.instance.id}\n          <Tooltip title=\"View Code\" placement=\"top\">\n            <IconButton\n              className={clsx(classes.instanceCardExpand, {\n                [classes.instanceCardExpandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <CodeIcon />\n            </IconButton>\n          </Tooltip>\n        </CardActions>\n        <Dialog\n          // open={open}\n          open={expanded}\n          onClose={handleExpandClick}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <div className={classes.cardHead}>\n            <DialogTitle id=\"alert-dialog-title\">{`${props.instance.name}`}</DialogTitle>\n          </div>\n          <div className={classes.cardHead}>\n            <TextField\n            size=\"small\"\n            className={classes.copy}\n            id=\"read-only-twitch-command\"\n            label=\"Twitch Dictum\"\n            defaultValue= {runInstance}\n            InputProps={{\n              readOnly: true,\n            }}\n            variant=\"outlined\"\n            aria-owns={popoverOpen ? 'mouse-over-popover' : undefined}\n            aria-haspopup=\"true\"\n            onMouseEnter={handlePopoverOpen}\n            onMouseLeave={handlePopoverClose}\n            onClick={() =>  {\n              navigator.clipboard.writeText(runInstance)\n              setPopText('Copied!')\n            }}\n            />\n            <Popover\n              id=\"mouse-over-popover\"\n              className={classes.instanceCardPopover}\n              classes={{\n                paper: classes.instanceCardPaper,\n              }}\n              open={popoverOpen}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              <Typography>{popText}</Typography>\n            </Popover>\n          </div>\n          <DialogContent className=\"dialogBox\">\n            <DialogContentText id=\"CodeMirror-Display\">\n              <CodeMirror\n                className={classes.codeMirror}\n                value={props.instance.text}\n                options={{\n                  lineWrapping: true,\n                  mode: 'scheme',\n                  theme: 'material',\n                  lineNumbers: true,\n                  matchBrackets: true,\n                  autoCloseBrackets: true,\n                  styleActiveLine: true,\n                }}\n              />\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n      </Card>\n    </Grid>\n  )\n};\n\nexport default InstanceCard;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport InstanceCard from './InstanceCard';\n\nconst UserInstances = (props) => {\n  const classes = useStyles();\n\n  const [cardImage, setCardImage] = useState(undefined);\n\n  const [instanceId, setInstanceId] = useState(undefined);\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <Grid container spacing={4}>\n        {props.instances.map((instance) => (  \n          <InstanceCard cardImage={cardImage} instance={instance} key={'key ' + instance.id}/>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n}));\n\nexport default UserInstances;\n","import React, { useEffect, useState } from 'react';\nimport Title from './Dashboard/Title';\nimport InstanceApiService from '../Services/instance-api-service';\nimport UserInstances from './UserInstances';\nimport Pagination from '@material-ui/lab/Pagination';\nimport {SearchBar} from '../Util.js'\nimport useStyles from '../styles.js';\n\nexport default function PublicInstances(props) {\n  // console.log(\"From index: \", props);\n  const [instances, setInstances] = useState([])\n  const classes = useStyles();\n  const [rowsPerPage, setRowsPerPage] = React.useState(9);\n  const [totalInstances, setTotalInstances] = React.useState(0);\n  const [currentPage, setCurrentPage] = useState(1)\n  const [search, setSearch] = React.useState('');\n\n  useEffect(() => {\n    let isMounted = true\n    InstanceApiService.getPublicInstances(currentPage, search)\n      .then(instances => {\n        if(isMounted){\n          setInstances(instances.instances)\n          setTotalInstances(instances.total)\n        }\n      })\n    return () => {\n      isMounted = false\n    }\n  }, [currentPage, search])\n\n  return (\n    <>\n      <div className={classes.headBar}>\n        <div className={classes.headLeft}></div>\n        <div className={classes.headTitle}>Public Instances</div>\n        <div className={classes.headRight}><SearchBar setSearch={setSearch} setCurrentPage={setCurrentPage}/></div>\n      </div>\n      <UserInstances instances={instances}/>\n      <Title>\n          <div className={classes.publicInstancesRoot}>\n            <Pagination count={Math.ceil(totalInstances / rowsPerPage)}\n              onChange={(event, page) => {setCurrentPage(page)}}\n            />\n          </div>\n      </Title>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport Title from './Dashboard/Title';\nimport InstanceApiService from '../Services/instance-api-service';\nimport UserInstances from './UserInstances';\nimport Pagination from '@material-ui/lab/Pagination';\nimport {SearchBar} from '../Util.js'\nimport useStyles from '../styles.js';\n\nconst UserProfile = (props) => {\n  const classes = useStyles();\n  const [user, setUser] = useState(undefined)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [currentPage, setCurrentPage] = useState(1)\n  const [search, setSearch] = React.useState('');\n\n  let path = window.location.pathname\n\n  useEffect(() => {\n    let isMounted = true\n    const { id } = props.match.params\n\n    InstanceApiService.getUserById(id, currentPage, search)\n      .then(user => {\n        if(isMounted) setUser(user)\n      })\n      return () => {\n        isMounted = false\n      }\n  },[currentPage, search, path])\n\n  return (\n    user ?\n      <>\n        <div className={classes.userProfileHeadBar}>\n          <div className={classes.userProfileHeadLeft}></div>\n          <div className={classes.userProfileHeadTitle}>{`Instances of ${user.username}`}</div>\n          <div className={classes.userProfileHeadRight}><SearchBar setSearch={setSearch}/></div>\n        </div>\n\n        <UserInstances instances={user.instances}/>\n        \n        <div className={classes.userProfileRoot}>\n          <Pagination count={Math.ceil(user.total / rowsPerPage)}\n            onChange={(event, page) => {setCurrentPage(page)}}\n          />\n        </div>\n      </>\n    : ''\n  );\n};\n\nexport default UserProfile;\n","import React from 'react';\n\nconst NotFoundPage = (props) => {\n  return (\n    <div>\n      <h2>404 - Page not found</h2>\n      <p>How did you even get here? That's not supposed to happen.</p> \n    </div>\n  );\n}\n\nNotFoundPage.defaultProps = {\n  history: {\n    push: () => {},\n  },\n}\n\nexport default NotFoundPage;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AgoraVideoPlayer,\r\n  createClient,\r\n  createMicrophoneAndCameraTracks,\r\n  ClientConfig,\r\n  IAgoraRTCRemoteUser,\r\n  ICameraVideoTrack,\r\n  IMicrophoneAudioTrack,\r\n} from \"agora-rtc-react\";\r\nimport {UnControlled as ReactCodeMirror} from 'react-codemirror2';\r\nimport 'codemirror/addon/edit/matchbrackets.js'\r\nimport 'codemirror/addon/edit/closebrackets.js'\r\nimport 'codemirror/addon/selection/active-line.js'\r\nimport config from '../../config';\r\nimport useStyles from '../../styles.js';\r\nimport { useHistory, useParams, Prompt } from \"react-router-dom\";\r\nimport TokenService from '../../Services/token-service';\r\n\r\n\r\n\r\n\r\nconst agoraConfig = { \r\n  mode: \"rtc\", codec: \"vp8\",\r\n};\r\nlet debounceTimer\r\nlet debounceWait = 2000;\r\nlet spinnerShow = 1000;\r\n\r\nconst appId = \"e47a164284a24bae83839c6898f434d9\"; //ENTER APP ID HERE\r\nconst token = \"006e47a164284a24bae83839c6898f434d9IABtii4C33WW3++LZVeMYC3GAPl7nDwokb9xUHIrtJYlY4a0dcYAAAAAEACZ/16CsubJYgEAAQCy5sli\";\r\n\r\nconst Agora = () => {\r\n  const [inCall, setInCall] = useState(false);\r\n  const [channelName, setChannelName] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [instance, setInstance] = useState();\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const { id } = useParams();\r\n  // FIXME: CodeMirror re-render workaround. Needs revision\r\n  const [instanceText, setInstanceText] = useState(undefined)\r\n  const debounce = (func, delay) => {\r\n    // setIsSaving(true);\r\n    clearTimeout(debounceTimer)\r\n    debounceTimer = setTimeout(() => func(), delay)\r\n  }\r\n  const updateInstance = (instance) => {\r\n    setIsSaving(true);\r\n\r\n    let payload = instance\r\n\r\n    return fetch(`${config.API_ENDPOINT}/instances/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\r\n      },\r\n      body: JSON.stringify(payload)\r\n    })\r\n      .then(res =>\r\n        (!res.ok)\r\n          ? res.json().then(e => Promise.reject(e))\r\n          : res.json()\r\n      )\r\n      .then((instance) => {\r\n        setTimeout(() => {  setIsSaving(false); }, spinnerShow);\r\n        // setIsSaving(false)\r\n        setInstance(instance)\r\n      })\r\n  }\r\n  return (\r\n    <div style={{height: '85vh'}}>\r\n      <h1 className=\"heading\">Kitsap Chat</h1>\r\n      {inCall ? (\r\n        <VideoCall setInCall={setInCall} channelName={channelName} />\r\n      ) : (\r\n        <ChannelForm setInCall={setInCall} setChannelName={setChannelName} />\r\n      )}\r\n      <ReactCodeMirror\r\n        className={classes.instanceDetailsCodeMirror}\r\n        value={instanceText ? instanceText : ''}\r\n        options={{\r\n          lineWrapping: true,\r\n          mode: 'scheme',\r\n          theme: 'material',\r\n          lineNumbers: true,\r\n          matchBrackets: true,\r\n          autoCloseBrackets: true,\r\n          styleActiveLine: true,\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n          setInstance({...instance, text: value})\r\n          // setIsSaving(true)\r\n          setTimeout(() => {\r\n            debounce(() => updateInstance({...instance, text: value}), debounceWait\r\n          )}, 500)\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// the create methods in the wrapper return a hook\r\n// the create method should be called outside the parent component\r\n// this hook can be used the get the client/stream in any component\r\nconst useClient = createClient(agoraConfig);\r\nconst useMicrophoneAndCameraTracks = createMicrophoneAndCameraTracks();\r\n\r\nconst VideoCall = (props) => {\r\n  const { setInCall, channelName } = props;\r\n  const [users, setUsers] = useState([]);\r\n  const [start, setStart] = useState(false);\r\n  // using the hook to get access to the client object\r\n  const client = useClient();\r\n  // ready is a state variable, which returns true when the local tracks are initialized, untill then tracks variable is null\r\n  const { ready, tracks } = useMicrophoneAndCameraTracks();\r\n\r\n  useEffect(() => {\r\n    // function to initialise the SDK\r\n    let init = async (name) => {\r\n      client.on(\"user-published\", async (user, mediaType) => {\r\n        await client.subscribe(user, mediaType);\r\n        console.log(\"subscribe success\");\r\n        if (mediaType === \"video\") {\r\n          setUsers((prevUsers) => {\r\n            return [...prevUsers, user];\r\n          });\r\n        }\r\n        if (mediaType === \"audio\") {\r\n          user.audioTrack?.play();\r\n        }\r\n      });\r\n\r\n      client.on(\"user-unpublished\", (user, type) => {\r\n        console.log(\"unpublished\", user, type);\r\n        if (type === \"audio\") {\r\n          user.audioTrack?.stop();\r\n        }\r\n        if (type === \"video\") {\r\n          setUsers((prevUsers) => {\r\n            return prevUsers.filter((User) => User.uid !== user.uid);\r\n          });\r\n        }\r\n      });\r\n\r\n      client.on(\"user-left\", (user) => {\r\n        console.log(\"leaving\", user);\r\n        setUsers((prevUsers) => {\r\n          return prevUsers.filter((User) => User.uid !== user.uid);\r\n        });\r\n      });\r\n\r\n      await client.join(appId, name, token, null);\r\n      if (tracks) await client.publish([tracks[0], tracks[1]]);\r\n      setStart(true);\r\n\r\n    };\r\n\r\n    if (ready && tracks) {\r\n      console.log(\"init ready\");\r\n      init(channelName);\r\n    }\r\n\r\n  }, [channelName, client, ready, tracks]);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {ready && tracks && (\r\n        <Controls tracks={tracks} setStart={setStart} setInCall={setInCall} />\r\n      )}\r\n      {start && tracks && <Videos users={users} tracks={tracks} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Videos = (props) => {\r\n  const { users, tracks } = props;\r\n\r\n  return (\r\n    <div >\r\n      <div id=\"videos\" style={{display: 'flex', width: \"100%\", height: \"100%\", flexShrink: '3', justifyContent: 'center', borderRadius: '20px'}}>\r\n        {/* AgoraVideoPlayer component takes in the video track to render the stream,\r\n            you can pass in other props that get passed to the rendered div */}\r\n        <AgoraVideoPlayer style={{display: 'flex', height: '200px', width: '300px', borderRadius: '20px'}} videoTrack={tracks[1]} />\r\n        {users.length > 0 &&\r\n          users.map((user) => {\r\n            if (user.videoTrack) {\r\n              return (\r\n                <AgoraVideoPlayer style={{display: 'flex', height: '200px', width: '300px', borderRadius: '20px'}} videoTrack={user.videoTrack} key={user.uid} />\r\n              );\r\n            } else return null;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Controls = (props) => {\r\n  const client = useClient();\r\n  const { tracks, setStart, setInCall } = props;\r\n  const [trackState, setTrackState] = useState({ video: true, audio: true });\r\n\r\n  const mute = async (type) => {\r\n    if (type === \"audio\") {\r\n      await tracks[0].setEnabled(!trackState.audio);\r\n      setTrackState((ps) => {\r\n        return { ...ps, audio: !ps.audio };\r\n      });\r\n    } else if (type === \"video\") {\r\n      await tracks[1].setEnabled(!trackState.video);\r\n      setTrackState((ps) => {\r\n        return { ...ps, video: !ps.video };\r\n      });\r\n    }\r\n  };\r\n\r\n  const leaveChannel = async () => {\r\n    await client.leave();\r\n    client.removeAllListeners();\r\n    // we close the tracks to perform cleanup\r\n    tracks[0].close();\r\n    tracks[1].close();\r\n    setStart(false);\r\n    setInCall(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"controls\">\r\n      <button className={trackState.audio ? \"on\" : \"\"}\r\n        onClick={() => mute(\"audio\")}>\r\n        {trackState.audio ? \"MuteAudio\" : \"UnmuteAudio\"}\r\n      </button> \r\n      <button className={trackState.video ? \"on\" : \"\"}\r\n        onClick={() => mute(\"video\")}>\r\n        {trackState.video ? \"MuteVideo\" : \"UnmuteVideo\"}\r\n      </button>\r\n      <br/>\r\n      {<button onClick={() => leaveChannel()}>Leave</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChannelForm = (props) => {\r\n  const { setInCall, setChannelName } = props;\r\n\r\n  return (\r\n    <form className=\"join\">\r\n      {appId === '' && <p style={{color: 'red'}}>Please enter your Agora App ID in App.tsx and refresh the page</p>}\r\n      <input type=\"text\"\r\n        autoFocus\r\n        placeholder=\"Enter Channel Name\"\r\n        onChange={(e) => setChannelName(e.target.value)}\r\n      />\r\n      <button onClick={(e) => {\r\n        e.preventDefault();\r\n        setInCall(true);\r\n      }}>\r\n        Join\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Agora;","import React, { useEffect, useState } from 'react';\nimport {  useParams } from \"react-router-dom\";\nimport InstanceApiService from '../Services/instance-api-service';\nimport Agora from './Agora/index.js';\n\n//Hacky, for now.  We'll just import all possible views here.  Later, will need to do this more dynamically (because the compiled React code will get too big/slow if we have 1000s of possible views compiled in)\nimport { Chessboard } from \"react-chessboard\";\nimport {Chess as ChessGame} from 'chess.js';\n\n\nconst Chess = (props) => {\n  const [game, setGame] = useState(new ChessGame(props.data));\n  console.log(game.fen())\n\n  return <Chessboard position={game.fen()} \n\t             getPositionObject={console.log}\n\t             onPieceDrop={(sourceSquare,targetSquare)=>{\n\t\t\t     const gameCopy = { ...game };\n\t\t\t     const move = gameCopy.move({\n\t\t\t\t\t    from: sourceSquare,\n\t\t\t\t\t    to: targetSquare,\n\t\t\t\t\t    promotion: 'q' \n\t\t\t\t\t  });\n\n\t\t\t     //Rather than setting the game directly here, we should update the\n\t\t\t     //  underlying data in the backend.  Look at how this is done from the\n\t\t\t     //  instance details text editor\n\t\t\t     setGame(gameCopy);\n\t\t     }}/> \n}\n\nconst VideoCall = (props) => {\n\n  return <Agora/>\n}\n\n\nconst CustomView = (props) => {\n  const { id, view_id } = useParams();\n  const [instanceData, setInstanceData] = useState(undefined)\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    InstanceApiService.getInstanceById(id)\n      .then(instance => {\n          setInstanceData(instance.text);\n      })\n      .catch(res => {\n        setError(res.error);\n      })\n  }, [view_id])\n\n  if(view_id == \"chess\" && instanceData)\n    return <Chess data={instanceData} />\n  else if (view_id === \"video-call\" && instanceData)\n    return <VideoCall data={instanceData} />\n  else\n    return <><h1>No view selected...  But here's your data!</h1><p>{instanceData}</p></>\n}\n\n\nexport default CustomView;\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport AuthApiService from './Services/auth-api-service';\n// import IdleService from './Services/idle-service';\nimport TokenService from './Services/token-service';\nimport LoginForm from './Components/LoginForm';\nimport SignupForm from './Components/SignupForm';\nimport LandingPage from './Components/LandingPage';\nimport InstanceIndex from './Components/Dashboard/InstanceIndex';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InstanceDetails from './Components/Dashboard/InstanceDetails';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport PublicInstances from './Components/PublicInstances';\nimport UserProfile from './Components/UserProfile';\nimport NotFound from './Components/NotFound';\nimport InstanceApiService from './Services/instance-api-service';\nimport CustomView from './Components/CustomView';\nimport {\n  epHome,\n  epLogin,\n  epSignup,\n  epInstanceIndex,\n  epInstanceDetails,\n  epPublicInstances,\n  epUserDetails,\n  epFriends,\n} from \"./fronteps\";\nrequire('codemirror/mode/scheme/scheme');\n\nfunction App() {\n  const paper = outerPaper();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(undefined);\n\n  useEffect(() => {\n    // Only running this to check if logged in\n    InstanceApiService.getUserById('me')\n      .then((user) => setIsLoggedIn(true))\n      .catch(() => setIsLoggedIn(false))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div >\n        <Switch>\n          <Route\n            exact path={epHome}\n            component={(props) => <LandingPage isLoggedIn={isLoggedIn}></LandingPage>}\n          />\n          <Route\n            exact path={'/panel.html'}\n            component={(props) => <LandingPage isLoggedIn={isLoggedIn}></LandingPage>}\n          />\n          <Route\n            path={epSignup}\n            component={SignupForm}\n          />\n          <Route\n            path={epLogin}\n            component={LoginForm}\n          />\n          <Route\n            path={'/instances/:id/views/:view_id'}\n            component={(props) => <Dashboard child={<CustomView />} isLoggedIn={isLoggedIn}></Dashboard>}\n          />\n          <Route\n            path={epInstanceDetails}\n            component={(props) => <Dashboard child={<InstanceDetails/>} isLoggedIn={isLoggedIn}></Dashboard>}\n          />\n          <Route\n            path={epInstanceIndex}\n            component={(props) => <InstanceIndex isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}></InstanceIndex>}\n          />\n          <Route\n            path={epFriends}\n            component={(props) => <Dashboard child={<div>Friends Coming Soon</div>}></Dashboard>}\n          />\n          <Route\n            path={epPublicInstances}\n            component={(props) => <Dashboard child={<PublicInstances/>} isLoggedIn={isLoggedIn}></Dashboard>}\n          />\n          <Route\n            path={epUserDetails}\n            component={(props) => <Dashboard child={<UserProfile match={props.match}/>}></Dashboard>}\n          />\n          <Route\n            component={(props) => <Dashboard child={<NotFound/>}></Dashboard>}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nconst outerPaper = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(2),\n      width: theme.spacing(50),\n      height: theme.spacing(50),\n    },\n  },\n}));\n\nexport default App;\n","let epHome = '/'\r\nlet epLogin = '/login'\r\nlet epSignup = '/signup'\r\nlet epInstanceIndex = '/instances'\r\nlet epInstanceDetails = '/instances/:id'\r\nlet epPublicInstances = '/gallery'\r\nlet epUserDetails = '/mages/:id'\r\nlet epFriends = '/friends'\r\n// TODO: update this endpoint\r\nlet epPublicInstanceDetails = '/secret/:id'\r\nlet epInstancesFork = '/instances/:id/fork'\r\nlet epInstancesTags = '/instances/:id/tags/:tag'\r\nlet epInstancesTagsIndex = '/instances/:id/tags'\r\nlet epDownloads = '/downloads'\r\nlet epFollows = '/users/:id/follows'\r\n\r\nexport \r\n{\r\n  epHome,\r\n  epLogin,\r\n  epSignup,\r\n  epInstanceIndex,\r\n  epInstanceDetails,\r\n  epPublicInstances,\r\n  epUserDetails,\r\n  epFriends,\r\n  epPublicInstanceDetails,\r\n  epInstancesFork,\r\n  epInstancesTags,\r\n  epInstancesTagsIndex,\r\n  epDownloads,\r\n  epFollows\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}